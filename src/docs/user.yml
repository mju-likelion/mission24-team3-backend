paths:
  /users:
    put:
      summary: "유저 가입하기"
      description: "유저 가입 요청을 보냅니다."
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 이메일 주소
                  example: toolscomfact@mju.ac.kr
                password:
                  type: string
                  description: 비밀번호
                  example: asdf
                name:
                  type: string
                  description: 이름
                  example: 박원호
      responses:
        "201":
          description: 회원가입 완료
        "400":
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                EMAIL_EXISTS:
                  description: 이미 존재하는 이메일입니다.
                  value:
                    statusCode: 400
                    errorCode: EMAIL_EXISTS
                    errorMsg: 이미 가입된 이메일입니다
                NAME_EXISTS:
                  description: 이미 존재하는 이름입니다.
                  value:
                    statusCode: 400
                    errorCode: NAME_EXISTS
                    errorMsg: 이미 사용중인 이름입니다
    post:
      summary: 로그인 하기
      description: 로그인 요청을 전송합니다
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: toolscomfact@mju.ac.kr
                password:
                  type: string
                  example: asdfasdf
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "access-token"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                ref: "#/components/schemas/Error"
              examples:
                EMAIL_NOT_EXISTS:
                  description: 존재하지 않는 이메일입니다.
                  value:
                    statusCode: 404
                    errorCode: "EMAIL_NOT_EXISTS"
                    errorMsg: "가입되지 않은 이메일입니다"
  /users/{userId}/likes/{itemId}:
    get:
      summary: 좋아요 여부 확인
      description: 유저가 해당 아이템에 좋아요를 눌렀는지 확인합니다.
      security:
        - BearerAuth: []
      tags:
        - Item
      parameters:
        - in: path
          name: itemId
          schema:
            type: string
          example: 630a297bcb5ee1489f13e620
      responses:
        "200":
          description: 좋아요 여부를 성공적으로 받아왔습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
                    example: true
                    description: 좋아요 여부
        "401":
          description: 인증 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                AUTHORIZATION_NOT_SUGGESTED:
                  $ref: "#/components/examples/AUTHORIZATION_NOT_SUGGESTED"
                AUTHORIZATION_INVALID:
                  $ref: "#/components/examples/AUTHORIZATION_INVALID"
